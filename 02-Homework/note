/bonus add sounds
// gonna have 2 html
//or just one html for the highscore and the other for everything else
//going to have an assets folder css and java
//jason would have 3 java files of logic, questions, and scores
//6 functions in logic files

// in questions files create variles to hold the questions
//tittle, choice, awnser 5 questions
//gonna have a tittle

//object that have a key value, choices are they key, the value of the choices are gonna be the array

// for logical you need to create the current state of the test to keep track of it
//need a var for time
//target a start, question (1-4),
//start button=documentbyId
//sound effects under the dom el
//Meat and Potatos
//fun to start quiz, get the question, what happens when user clicks (is it right or wrong)
//do sound last if you do
//once you get question need function to handel how quiz ends
//clearInterval to stop the quiz or time idk
//your gonna pass in a var gonna need a 
//3rd var to count timer
//pass timer id into clear method
// then more function
//Need to show that the screen ends
//show the final score get elbyid method
//hid questions pass in function set class or att for hide?
//clock tick function gage time
//update time 
//condition statement for if they ran out of time
//tip for that function for quiz end your gonna call the quiz end function
//needs highscore and a way to save highscore
//get val of input box for initals
//if state to see if box is empty
//you sent an if statment to an empty string if initals do not = empty string stroe something
//json.parse to local storage
//set it to an empty arry 
// to save highscore on next play through you could have a save button
//checking for enter hint checking for key up
//for high score json.parse to save score
//you need code to save to local storage
//stringafy
//window.location.href ="highscores.html" to bring me to the highscore page only if you 2 html
//function for check for enter
//pass for function check for enter pass event function(event)
//if event.key === enter then im going to produce and save highscore
// you do need logic for the scores close to the save highscores NEED FUNCTION
//JSON.PARSE-----
//WHAT IS .SORT to sort highscores
//to sort it you could use a for loop or use the foreach